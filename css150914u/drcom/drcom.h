// coding: cp866
//---------------------------------------------------------------------------
   ex vd      DPrn (_i,_i, vktuc *, ...);
   ex _f      TOSERCNT;                 // кол-во таймаутов CBL[25]
   ex _i      TOSER;                    // таймаут для приема по COM порту
   ex uc      STAT_str[SLEN];           // вывод сообщений для внешних функций
   ex _i      STAT_cnt;                 // флаг вывода сообщений ...
   ex uc      COMWSNum[2];              // номер данной рабочей станции
   ex _i      Debug(_i);                // проверка знач для выв отлад инф
   ex ul      BDSER;                    // скорость обмена по COM порту
   ex _i      MTimer(ui, uc, ui);       // функция таймера
   ex _i      CurSP;                    // номер текущего COM порта
   ex _f      divf(_f, _f);
   ex _i      divi(_i, _i);
   ex vd      COMAnsVal(ui, uc);
//---------------------------------------------------------------------------
   uc SPSBuf[SPMAX][SPBSZ];             // буфер посылки
   uc SPRBuf[SPMAX][SPBSZ];             // буфер приема
   uc SPTBuf[SPMAX][14];                // буфер передачи принятых данных
   uc ICTS[SPMAX]={0,0,0};              // байт статуса при посылке
   uc ICTR[SPMAX]={0,0,0};              // байт статуса при приеме
   uc ICTQ[SPMAX]={0,0,0};              // байт статуса прерывания
   uc ICTM[SPMAX]={0,0,0};              // байт статуса модема
   uc TMPB[SPMAX]={0,0,0};              // байт инициализации
   _i SPIO[SPMAX]={0x3f8,0x2f8,0x378};  // адреса портов
   _i LSSB[SPMAX]={0,0,0};              // длинна строки посылки
   _i CSSB[SPMAX]={0,0,0};              // N текущего символа буфера посылки
   _i CSRB[SPMAX]={0,0,0};              // N текущего символа буфера приема
   uc COMTmp[5]={0,0,0,0,0};            // строка преобразования
   uc COMCRC[SPMAX]={0,0,0};            // контрольная сумма
   uc COMCRCTmp[14];                    // временный буфер подсчета CRC
   _i COMBusy[SPMAX]={0,0,0};           // флаг работы с COM портом
   _f COMCVal [SPMAX]={0,0,0};          // принятые значения текущих каналов
   _f COMSCVal[SPMAX]={0,0,0};          // значение для установки  на канале
   _i COMCCh  [SPMAX]={0,0,0};          // номер текущего принятого канала
   _i TOInp[SPMAX]={0,0,0};             // таймаут ожидания приема
   _i COMHBR=0;                         // сколько байт было считанно с порта
   _i SPRESULT[SPMAX]={0,0,0};          // код ошибки при опросе портов
   _i SPFLBEG=-1;                       // флаг начала приема блока данных

//---------------------------------------------------------------------------
#ifndef _VKSP_H_
#define _VKSP_H_
_i  VKSPInit      (ui);
vd  VKSPHand      (ui);
_i  VKSPSet (ui,ui,ui);
vd  VKSPStop      (vd);
us  VKSPOut    (ui,us);
_i  VKSPOutStat   (ui);
_i  VKSPInStat    (ui);
us  VKSPIn     (ui,us);
#endif
_i  COMGetCH(ui);
//---------------------------------------------------------------------------
// структура запроса на передачу значений каналов
struct {
   uc   Begin;                          // 1
   uc   Addr[2];                        // 2
   uc   Code;                           // 1
   uc   nCH1[4];                        // 4
   uc   nCH2[4];                        // 4
   uc   CRC;                            // 1
   uc   End;                            // 1
}  COMREQ[SPMAX];                       // = 14 байт
//---------------------------------------------------------------------------
// структура запроса на установку значений каналов
struct {
   uc   Begin;                          // 1
   uc   Addr[2];                        // 2
   uc   Code;                           // 1
   uc   nCHS[4];                        // 4
   _f   Val __attribute__((packed));    // 4
   uc   CRC;                            // 1
   uc   End;                            // 1
}  COMSET[SPMAX];                       // = 14 байт
//---------------------------------------------------------------------------
// структура ответа на запрос
struct {
   uc   Begin;                          // 1
   uc   Addr[2];                        // 2
   uc   Code;                           // 1
   uc   nCHA[4];                        // 4
   _f   Val   __attribute__((packed));  // 4
   uc   CRC;                            // 1
   uc   End;                            // 1
}  COMANS[SPMAX];                       // = 14 байт
//---------------------------------------------------------------------------
