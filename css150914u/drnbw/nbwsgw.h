// coding: cp866
//---------------------------------------------------------------------------
#define  LNAM                           16          // длинна имени WS
#define  MNCB                           8           // кол-во NCB
#define  LNCB                           504         // длинна буфера посылки-приема
#define  LNCBMAX                        512         // макс возможная длинна буфера NCB

ex _f   CBL [MLOC];          // массив текущ значен локал драйвера
//---------------------------------------------------------------------------
ex struct  CB{
   uc   nm[SLEN];            // имя канала
   _i   ar;                  // признак записи значений канала в архив
   _i   dt;                  // тип драйвера   (0-лок,1-COM,2-NB,3-TCP)
   _i   dn;                  // номер порта,станции
   _i   dd;                  // номер переменной на удаленной станции
   _i   t;                   // тип переменной (1-вход,2-выход)
   _i   dc;                  // количество цифр после запятой
   _f   l;                   // нижняя граница
   _f   h;                   // верхняя граница
   uc   rm[SLEN];            // комментарий
   _f   v;                   // значение канала
}  CB[MCH];
//---------------------------------------------------------------------------
ex _i   STNBW;               // статус работы сети по NETBIOS
ex _i   STNBO;
ex _i   FNBS[MNBW];          // флаги состояния каналов
ex _i   HNBW;                // количество каналов NetBIOS
ex _i   DNBW[MNBW];          // номера каналов  в массиве CB[]
ex _i   NNBW[MNBW];          // номера удаленных  станций
ex _i   SNBW[MNBW];          // номера каналов на удаленной станции
ex _f   CBN [MNBW];          // значения каналов
ex uc   NMWS[16];            // имя данной рабочей станции
ex uc   STAT_str[SLEN];      // вывод сообщений для внешних функций
ex _i   STAT_cnt;            // флаг вывода сообщений ...
ex _i   NBWAI;               // флаг ожидания кода сброса ошибки
ex _i   EKNBWCNT;            // счетчик запросов после смены экрана
ex _i   EKNBWREQ;            // 
//---------------------------------------------------------------------------
ex ui   NBStat;
ex vd   mSound(ui);
//---------------------------------------------------------------------------
ex uc   WS_RD[MNCB+1][LNCBMAX];
ex uc   WS_SD[MNCB+1][LNCBMAX];
ex uc   WS_NB__GetFinalCCode(uc);
ex uc   WS_NB__GetRetCCode(uc);
ex vd   WS_NB__GetRName(uc);
ex ui   WS_NB__Send    (ui, char *);
ex ui   WS_NB__Receive (ui);
ex _i   WS_NB__AvNCB   (vd);
ex uc   WS_NB__Cancel  (uc);
ex vd   WS_NB__ZeroSBF (uc);
ex vd   WS_NB__ZeroRBF (uc);
ex vd   WS_NB__ZeroNCB (uc);
ex vd   WS_NB__ZeroBUF (uc);
ex vd   DPrn (_i,_i, vktuc *, ...);
ex _i   Debug(_i);
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
   ui   WS_NB__ReqToNet  (ui);
   vd   WS_NB__Answer    (ui,ui);
   vd   WS_NB__GetFromNet(ui);
   vd   WS_NB__GetReq    (ui);
//---------------------------------------------------------------------------
   ui   CurNCBQ=0;           // номер текущего NCB запроса
   ui   CurNCFQ=0;           // флаг определения нового NCB запроса
   ui   CurNCBS=0;           // номер текущего NCB посылки
   ui   CurNCFS=0;           // флаг определения нового NCB посылки
   ui   SND=0;               // флаг включения звука
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
struct  WS_R1{               // Code=1
   uc   Code;                // 1
   uc   NData;               // 1 (Кол-во запрашиваемых данных)
   uc   Const0;              // 1
   uc   NReq;                // 1 (Номер запроса)
   uc   Const1;              // 1
   uc   Const2;              // 1
   _s   ReqData[124];        // 2*124=248 (N запраш каналов)
   uc   Const3[250];         // 1*250=250
}  WS_R1[NCBWR];             // Всего 504 байта
//---------------------------------------------------------------------------
struct  WS_R2{                              // Code=2
   uc   Code;                               // 1
   uc   NReq;                               // 1
   ui   Time      __attribute__((packed));  // 4
   _f   Data[124] __attribute__((packed));  // 4*124=496
   uc   Const[2];                           // 1*2=2
}  WS_R2[NCBWR];                            // Всего 504 байта
//---------------------------------------------------------------------------
struct  WS_R7{                              // Code=7
   uc   Code;                               // 7
   uc   Const0;                             // 1
   _s   NData;                              // 2
   _s   ChNum[80];                          // 2*80=160
   _f   ChData[80] __attribute__((packed)); // 4*80=320
   uc   Const3[20];                         // 1*20=20
}  WS_R7[NCBWR];                            // Всего: 504 байта
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
struct  WS_S1{               // Code=1
   uc   Code;                // 1
   uc   NData;               // 1 (Кол-во запрашиваемых данных)
   uc   Const0;              // 1
   uc   NReq;                // 1 (Номер запроса)
   uc   Const1;              // 1
   uc   Const2;              // 1
   _s   ReqData[124];        // 2*124=248 (N запраш каналов)
   uc   Const3[250];         // 1*250=250
}  WS_S1[NCBWR];             // Всего 504 байта
//---------------------------------------------------------------------------
struct  WS_S2{                              // Code=2
   uc   Code;                               // 1
   uc   NReq;                               // 1
   ui   Time      __attribute__((packed));  // 4
   _f   Data[124] __attribute__((packed));  // 4*124=496
   uc   Const[2];                           // 1*2=2
}  WS_S2[NCBWR];                            // Всего 504 байта
//---------------------------------------------------------------------------
struct  WS_S7{                              // Code=7
   uc   Code;                               // 1
   uc   Const0;                             // 1
   _s   NData      __attribute__((packed)); // 2
   _s   ChNum[80]  __attribute__((packed)); // 2*80=160
   _f   ChData[80] __attribute__((packed)); // 4*80=320
   uc   Const3[20];                         // 1*20=20
}  WS_S7[NCBWR];                            // Всего: 504 байта
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
struct NBRQ {
   _i  cq[MRCH+1];           // номера каналов для запроса
   _i  ca[MRCH+1];           // номера каналов для ответа
}  NBRQ[MQR+1];              // на макс допуст кол-во запросов + 1
struct  NBST  {
   _i   cq[MRCH+1];          // номера каналов для установки
   _i   ca[MRCH+1];          // номера каналов для ответа
}  NBST[MQR+1];              // на макс допуст кол-во запросов + 1
uc QRC=1;                    // номер  текущей очереди запросов
uc STC=1;                    // номер  текущей очереди установок
//---------------------------------------------------------------------------
uc WS_NBName[10]={'A','R','G','@','@','S',0,0,0,0};
uc nbwtmpcc[5]={0,0,0,0,0};
//---------------------------------------------------------------------------
